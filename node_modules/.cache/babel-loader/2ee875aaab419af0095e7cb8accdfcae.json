{"ast":null,"code":"var _jsxFileName = \"/Users/jhaelintoliver/Desktop/React-Projects/game-num/client/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { socket } from './atoms';\nimport './styles.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [number, setNumber] = useState(1);\n  const [firstNumber, setFirstNumber] = useState(0);\n  const [secondNumber, setSecondNumber] = useState(0);\n  let [score, setScore] = useState(0);\n  const [numOfUsers, setNumOfUsers] = useState(0);\n  const [loser, setLoser] = useState(false);\n  const connectedSocket = useRecoilValue(socket);\n  useEffect(() => {\n    if (number === 0) {\n      console.log('win');\n      connectedSocket.emit('wins');\n      connectedSocket.emit('score', score);\n      setScore(score + 1);\n      connectedSocket.on('loser', value => {\n        console.log('loser');\n        setLoser(value);\n      });\n    } else if (number < 0) {\n      console.log('lose');\n    }\n  }, [number, connectedSocket]);\n  console.log(score);\n  useEffect(() => {\n    connectedSocket.on('generatedNum', info => {\n      console.log(info);\n      setNumber(info[0]);\n      setFirstNumber(info[1]);\n      setSecondNumber(info[2]);\n    });\n  }, []);\n\n  const decrement = num => {\n    setNumber(number - num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: loser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loser\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"game_button\",\n          onClick: () => decrement(firstNumber),\n          children: [\"-\", firstNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"game_button\",\n          onClick: () => decrement(secondNumber),\n          children: [\"-\", secondNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"game_button\",\n          onClick: () => decrement(1),\n          children: -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"E829CHsD/I0wsj7tL8wt62dXjYM=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/jhaelintoliver/Desktop/React-Projects/game-num/client/src/Game.js"],"names":["React","useEffect","useState","useRecoilValue","socket","Game","number","setNumber","firstNumber","setFirstNumber","secondNumber","setSecondNumber","score","setScore","numOfUsers","setNumOfUsers","loser","setLoser","connectedSocket","console","log","emit","on","value","info","decrement","num"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { socket } from './atoms'\nimport './styles.css'\n\nconst Game = () => {\n\n    const [number, setNumber] = useState(1)\n    const [firstNumber, setFirstNumber] = useState(0)\n    const [secondNumber, setSecondNumber] = useState(0)\n    let [score, setScore] = useState(0)\n\n    const [numOfUsers, setNumOfUsers] = useState(0)\n    const [loser, setLoser] = useState(false)\n\n    const connectedSocket = useRecoilValue(socket)\n\n    useEffect(() => {\n            if(number === 0) {\n                    console.log('win')\n                    connectedSocket.emit('wins')\n                    connectedSocket.emit('score', score)\n                    setScore(score+1)\n                   connectedSocket.on('loser', (value) => {\n                       console.log('loser')\n                       setLoser(value)\n                   })\n            }\n            else if (number < 0) {\n                    console.log('lose')\n            }\n    }, [number, connectedSocket])\n\n\n   \n    console.log(score)\n\n   \n\n    useEffect(() => {\n            connectedSocket.on('generatedNum', (info) => {\n                console.log(info)\n                setNumber(info[0])\n                setFirstNumber(info[1])\n                setSecondNumber(info[2])\n            })\n\n           \n    }, [])\n\n   \n\n    const decrement = (num) => {\n        setNumber(number - num)\n    }\n\n    return (\n        \n        <div className = 'game'>\n            {loser ? \n            (<>Loser</>)\n             : \n            (\n                <>\n                    <h1>{number}</h1>\n                \n                <div>\n                    <button className = 'game_button' onClick = {() => decrement(firstNumber)}>-{firstNumber}</button>\n                    <button className = 'game_button' onClick = {() => decrement(secondNumber)}>-{secondNumber}</button>\n                    <button className = 'game_button' onClick = {() => decrement(1)}>{-1}</button>\n                </div>\n                </>\n            )}\n            \n            \n        </div>\n    )\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}