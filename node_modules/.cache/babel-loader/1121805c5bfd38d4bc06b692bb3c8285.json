{"ast":null,"code":"var _jsxFileName = \"/Users/jhaelintoliver/Desktop/React-Projects/game-num/client/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { socket } from './atoms';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [number, setNumber] = useState(1);\n  const [firstNumber, setFirstNumber] = useState(0);\n  const [secondNumber, setSecondNumber] = useState(0);\n  let [score, setScore] = useState(0);\n  const [numOfUsers, setNumOfUsers] = useState(0);\n  const [loser, setLoser] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const [roundLost, setRoundLost] = useState(false);\n  const [roundWon, setRoundWon] = useState(false);\n  const [won, setWon] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [game, setGame] = useState(true);\n  const connectedSocket = useRecoilValue(socket);\n  useEffect(() => {\n    if (number === 0) {\n      console.log('win');\n      connectedSocket.emit('userWins');\n      setScore(score + 1);\n      connectedSocket.emit('score', score);\n      setRoundWon(false);\n    } else if (number < 0) {\n      console.log('lost');\n      connectedSocket.emit('lost');\n    }\n  }, [number, connectedSocket]);\n  connectedSocket.on('loser', value => {\n    setLoser(value);\n    setTimeout(() => {\n      setLoser(false);\n    }, 1000);\n    console.log('loser', loser);\n  });\n  connectedSocket.on('winner', value => {\n    setWinner(value);\n    setTimeout(() => {\n      setWinner(false);\n    }, 1000);\n    console.log('winner', winner);\n  });\n  useEffect(() => {\n    connectedSocket.on('won', value => {\n      setGame(false);\n      setWon(value);\n      setWinner(value);\n      setLoser(!value);\n    });\n    connectedSocket.on('lost', value => {\n      setGame(false);\n      setLost(value);\n      setWinner(!value);\n      setLoser(value);\n    });\n  }, []);\n  console.log(score);\n  useEffect(() => {\n    connectedSocket.on('generatedNum', info => {\n      console.log(info);\n      setNumber(info[0]);\n      setFirstNumber(info[1]);\n      setSecondNumber(info[2]);\n    });\n  }, []);\n\n  const decrement = num => {\n    setNumber(number - num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [lost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You lost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"a;dfkj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 22\n    }, this), won && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You lost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 24\n    }, this), loser && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }, this), roundWon && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Round Won!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 26\n    }, this), !winner && !loser && game && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"game_button\",\n          disabled: winner,\n          onClick: () => decrement(firstNumber),\n          children: [\"-\", firstNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"game_button\",\n          onClick: () => decrement(secondNumber),\n          children: [\"-\", secondNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"game_button\",\n          onClick: () => decrement(1),\n          children: -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"yJVy5d3cjdhskJocaBtYBjUV92w=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/jhaelintoliver/Desktop/React-Projects/game-num/client/src/Game.js"],"names":["React","useEffect","useState","useRecoilValue","socket","Game","number","setNumber","firstNumber","setFirstNumber","secondNumber","setSecondNumber","score","setScore","numOfUsers","setNumOfUsers","loser","setLoser","winner","setWinner","roundLost","setRoundLost","roundWon","setRoundWon","won","setWon","lost","setLost","game","setGame","connectedSocket","console","log","emit","on","value","setTimeout","info","decrement","num"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { socket } from './atoms'\nimport './styles.css'\n\nconst Game = () => {\n\n    const [number, setNumber] = useState(1)\n    const [firstNumber, setFirstNumber] = useState(0)\n    const [secondNumber, setSecondNumber] = useState(0)\n    let [score, setScore] = useState(0)\n\n    const [numOfUsers, setNumOfUsers] = useState(0)\n    const [loser, setLoser] = useState(false)\n    const [winner, setWinner] = useState(false)\n    const [roundLost, setRoundLost] = useState(false)\n    const [roundWon, setRoundWon] = useState(false)\n    const [won, setWon] = useState(false)\n    const [lost, setLost] = useState(false)\n    const [game, setGame] = useState(true)\n\n    const connectedSocket = useRecoilValue(socket)\n\n    useEffect(() => {\n            if(number === 0) {\n                    console.log('win')\n                    connectedSocket.emit('userWins')\n                    setScore(score + 1)\n                    connectedSocket.emit('score', score)\n\n         \n                       \n\n                    setRoundWon(false)\n                   \n            }\n            else if (number < 0) {\n\n                console.log('lost')\n                    connectedSocket.emit('lost')\n\n                    \n\n            }\n    }, [number, connectedSocket])\n    \n\n    connectedSocket.on('loser', (value) => {\n        setLoser(value)\n\n        setTimeout(() => {\n            setLoser(false)\n        }, 1000)\n        console.log('loser',loser)\n    })\n    connectedSocket.on('winner', (value) => {\n        setWinner(value)\n        setTimeout(() => {\n            setWinner(false)\n        }, 1000)\n        console.log('winner',winner)\n    })\n\n    useEffect(() => {\n\n        connectedSocket.on('won', (value) => {\n            setGame(false)\n            setWon(value)\n            setWinner(value)\n            setLoser(!value)\n            \n        })\n        connectedSocket.on('lost', (value) => {\n            setGame(false)\n            setLost(value)\n            setWinner(!value)\n            setLoser(value)\n        })\n\n    }, [])\n\n    \n\n\n   \n    console.log(score)\n\n   \n\n    useEffect(() => {\n            connectedSocket.on('generatedNum', (info) => {\n                console.log(info)\n                setNumber(info[0])\n                setFirstNumber(info[1])\n                setSecondNumber(info[2])\n            })\n\n           \n    }, [])\n\n\n   \n\n    const decrement = (num) => {\n        setNumber(number - num)\n    }\n\n    return (\n        \n        <div className = 'game'>\n\n            {lost && <div><h1>You lost</h1><button>a;dfkj</button></div>}\n            {won && <h1>You lost</h1>}\n\n\n\n            {winner && <h1>Winner</h1>}\n            {loser && <h1>Loser</h1>}\n\n            {roundWon && <h1>Round Won!</h1>}\n\n            {(!winner && !loser && game) &&\n            <>\n                    <h1>{number}</h1>\n                \n                <div>\n                    <button className = 'game_button' disabled = {winner} onClick = {() => decrement(firstNumber)}>-{firstNumber}</button>\n                    <button className = 'game_button' onClick = {() => decrement(secondNumber)}>-{secondNumber}</button>\n                    <button className = 'game_button' onClick = {() => decrement(1)}>{-1}</button>\n                </div>\n            </>\n                }\n\n\n                \n\n            \n            \n        </div>\n    )\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}